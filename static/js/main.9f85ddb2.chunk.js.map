{"version":3,"sources":["data/data.js","components/buttons/index.js","components/buttons/buttons.jsx","components/display/index.js","components/display/display.jsx","utils/computer.js","calculator.jsx","index.js"],"names":["data","id","symbol","cls","type","Buttons","onButtons","className","map","onClick","Display","number","result","expression","computer","a","b","action","Number","toFixed","App","useState","setNumber","setResult","operator","setOperator","dot","setDot","setExpression","useEffect","Infinity","clearDisplay","prevNumber","handleNumbers","handleOperators","prev","slice","trim","handleExpression","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f85ddb2.chunk.js","sourcesContent":["export const data = [\n  { id: 'plus', symbol: ' + ', cls: 'button', type: 'math' },\n  { id: 'minus', symbol: ' - ', cls: 'button', type: 'math' },\n  { id: 'multiply', symbol: ' * ', cls: 'button', type: 'math' },\n  { id: 'divide', symbol: ' / ', cls: 'button', type: 'math' },\n  { id: '7', symbol: '7', cls: 'button', type: 'number' },\n  { id: '8', symbol: '8', cls: 'button', type: 'number' },\n  { id: '9', symbol: '9', cls: 'button', type: 'number' },\n  { id: '4', symbol: '4', cls: 'button', type: 'number' },\n  { id: '5', symbol: '5', cls: 'button', type: 'number' },\n  { id: '6', symbol: '6', cls: 'button', type: 'number' },\n  { id: '1', symbol: '1', cls: 'button', type: 'number' },\n  { id: '2', symbol: '2', cls: 'button', type: 'number' },\n  { id: '3', symbol: '3', cls: 'button', type: 'number' },\n  { id: '0', symbol: '0', cls: 'button', type: 'number' },\n  { id: 'dot', symbol: '.', cls: 'button', type: 'number' },\n  { id: 'ac', symbol: 'AC', cls: 'button', type: 'clear' },\n  { id: 'equal', symbol: '=', cls: 'button big', type: 'equal' },\n];\n","import Buttons from \"./buttons\";\n\nexport default Buttons;","import React from 'react';\nimport { data } from '../../data';\nimport './buttons.css';\n\nconst Buttons = ({ onButtons }) => {\n  return (\n    <div className=\"calculator__buttons\">\n      {data.map(({ id, symbol, cls, type }) => (\n        <div\n          onClick={() => onButtons(id, symbol, type)}\n          key={id}\n          className={`calculator__${cls}`}\n        >\n          {symbol}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Buttons;\n","import Display from \"./display\";\n\nexport default Display;","import React from 'react';\nimport './display.css';\n\nconst Display = ({ number, result, expression}) => {\n  return (\n    <div className=\"calculator__display\">\n      <div className=\"calculator__expression\">{expression || 0}</div>\n      <div className=\"calculator__result\">{number || result}</div>    \n    </div>);\n};\n\nexport default Display;","const computer = (a, b, action) => {\n  let result = 0;\n\n  switch (action) {\n    case 'plus':\n      result = a + b;\n      break;\n    case 'minus':\n      result = a - b;\n      break;\n    case 'multiply':\n      result = a * b;\n      break;\n    case 'divide':\n      result = a / b;\n      break;\n    default:\n      return result;\n  }\n\n  return Number(result.toFixed(5));\n};\n\nexport default computer;\n","import React, { useState, useEffect } from 'react';\nimport './calculator.css';\nimport Buttons from './components/buttons';\nimport Display from './components/display';\nimport computer from './utils/computer';\n\nfunction App() {\n  const [number, setNumber] = useState('');\n  const [result, setResult] = useState('');\n  const [operator, setOperator] = useState('');\n  const [dot, setDot] = useState(true);\n  const [expression, setExpression] = useState('');\n\n  useEffect(() => {\n    if (operator === 'equal') setExpression(result);\n    if (!operator && number) setExpression(number);\n    if (result === Infinity) clearDisplay();\n  }, [result, operator, number]);\n\n  const handleNumbers = (id, symbol) => {\n    if (number === '0' && id !== 'dot') setNumber('');\n    if (dot && !number && id === 'dot') {\n      setNumber('0');\n    }\n    if (id === 'dot') setDot(false);\n    if (!dot && id === 'dot') return;\n    if (operator === 'equal') {\n      setOperator('');\n      setResult('');\n    }\n    if (number === '0' && symbol === '0' && dot) return;\n\n    setNumber((prevNumber) => prevNumber + symbol);\n  };\n\n  const handleOperators = (id) => {\n    if (operator && result && number) {\n      setResult(computer(Number(result), Number(number), operator));\n      setOperator(id);\n      setNumber('');\n      return;\n    }\n\n    setOperator(id);\n    if (number) setResult(number);\n    setNumber('');\n    setDot(true);\n  };\n\n  const handleExpression = (id, symbol, type) => {\n    if (\n      id === 'equal' ||\n      id === 'ac' ||\n      (!dot && id === 'dot') ||\n      (!Number(number) && symbol === '0') ||\n      (!number && !result && type === 'math')\n    )\n      return;\n    \n    if (!number && type === 'math') {\n      setExpression((prev) => prev.slice(0, -2).trim() + symbol);\n      return;\n    }\n\n    if (!number && id === 'dot') {\n      setExpression(expression + '0.');\n      return;\n    }\n\n    setExpression(expression + symbol);\n  };\n\n  const handleResult = () => {\n    if (operator === 'equal' || !result) return;\n    setResult(computer(Number(result), Number(number), operator));\n    setOperator('equal');\n    setNumber('');\n  };\n\n  const clearDisplay = () => {\n    setNumber('');\n    setResult('');\n    setOperator('');\n    setExpression('');\n    setDot(true);\n  };\n\n  const handleButtons = (id, symbol, type) => {\n    if (type === 'number') handleNumbers(id, symbol);\n    if (type === 'math') handleOperators(id);\n    if (type === 'clear') clearDisplay();\n    if (type === 'equal') handleResult();\n    handleExpression(id, symbol, type);\n  };\n\n  return (\n    <div className=\"calculator\">\n      <Display\n        number={number || 0}\n        result={Number(result) || 0}\n        expression={expression || ''}\n      />\n      <Buttons onButtons={handleButtons} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './calculator';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n"],"sourceRoot":""}